
MuMo-v2-Node-SW.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000138  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000fc  08000138  08000138  00010138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000234  0800023c  0001023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000234  08000234  0001023c  2**0
                  CONTENTS
  4 .ARM          00000000  08000234  08000234  0001023c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000234  0800023c  0001023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000234  08000234  00010234  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000238  08000238  00010238  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800023c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800023c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0001023c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000a8  00000000  00000000  00010266  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000005b  00000000  00000000  0001030e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010370  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  000103b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f28  00000000  00000000  000103e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000042a  00000000  00000000  00011310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003a9a  00000000  00000000  0001173a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000151d4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  00015224  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000138 <__do_global_dtors_aux>:
 8000138:	b510      	push	{r4, lr}
 800013a:	4c05      	ldr	r4, [pc, #20]	; (8000150 <__do_global_dtors_aux+0x18>)
 800013c:	7823      	ldrb	r3, [r4, #0]
 800013e:	b933      	cbnz	r3, 800014e <__do_global_dtors_aux+0x16>
 8000140:	4b04      	ldr	r3, [pc, #16]	; (8000154 <__do_global_dtors_aux+0x1c>)
 8000142:	b113      	cbz	r3, 800014a <__do_global_dtors_aux+0x12>
 8000144:	4804      	ldr	r0, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x20>)
 8000146:	f3af 8000 	nop.w
 800014a:	2301      	movs	r3, #1
 800014c:	7023      	strb	r3, [r4, #0]
 800014e:	bd10      	pop	{r4, pc}
 8000150:	20000000 	.word	0x20000000
 8000154:	00000000 	.word	0x00000000
 8000158:	0800021c 	.word	0x0800021c

0800015c <frame_dummy>:
 800015c:	b508      	push	{r3, lr}
 800015e:	4b03      	ldr	r3, [pc, #12]	; (800016c <frame_dummy+0x10>)
 8000160:	b11b      	cbz	r3, 800016a <frame_dummy+0xe>
 8000162:	4903      	ldr	r1, [pc, #12]	; (8000170 <frame_dummy+0x14>)
 8000164:	4803      	ldr	r0, [pc, #12]	; (8000174 <frame_dummy+0x18>)
 8000166:	f3af 8000 	nop.w
 800016a:	bd08      	pop	{r3, pc}
 800016c:	00000000 	.word	0x00000000
 8000170:	20000004 	.word	0x20000004
 8000174:	0800021c 	.word	0x0800021c

08000178 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000178:	b480      	push	{r7}
 800017a:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 800017c:	e7fe      	b.n	800017c <main+0x4>
	...

08000180 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000180:	480d      	ldr	r0, [pc, #52]	; (80001b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000182:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000184:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000188:	480c      	ldr	r0, [pc, #48]	; (80001bc <LoopForever+0x6>)
  ldr r1, =_edata
 800018a:	490d      	ldr	r1, [pc, #52]	; (80001c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800018c:	4a0d      	ldr	r2, [pc, #52]	; (80001c4 <LoopForever+0xe>)
  movs r3, #0
 800018e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000190:	e002      	b.n	8000198 <LoopCopyDataInit>

08000192 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000192:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000194:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000196:	3304      	adds	r3, #4

08000198 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000198:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800019a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800019c:	d3f9      	bcc.n	8000192 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800019e:	4a0a      	ldr	r2, [pc, #40]	; (80001c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001a0:	4c0a      	ldr	r4, [pc, #40]	; (80001cc <LoopForever+0x16>)
  movs r3, #0
 80001a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001a4:	e001      	b.n	80001aa <LoopFillZerobss>

080001a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001a8:	3204      	adds	r2, #4

080001aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001ac:	d3fb      	bcc.n	80001a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001ae:	f000 f811 	bl	80001d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001b2:	f7ff ffe1 	bl	8000178 <main>

080001b6 <LoopForever>:

LoopForever:
    b LoopForever
 80001b6:	e7fe      	b.n	80001b6 <LoopForever>
  ldr   r0, =_estack
 80001b8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80001bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001c0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001c4:	0800023c 	.word	0x0800023c
  ldr r2, =_sbss
 80001c8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001cc:	2000001c 	.word	0x2000001c

080001d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001d0:	e7fe      	b.n	80001d0 <ADC_IRQHandler>
	...

080001d4 <__libc_init_array>:
 80001d4:	b570      	push	{r4, r5, r6, lr}
 80001d6:	4d0d      	ldr	r5, [pc, #52]	; (800020c <__libc_init_array+0x38>)
 80001d8:	4c0d      	ldr	r4, [pc, #52]	; (8000210 <__libc_init_array+0x3c>)
 80001da:	1b64      	subs	r4, r4, r5
 80001dc:	10a4      	asrs	r4, r4, #2
 80001de:	2600      	movs	r6, #0
 80001e0:	42a6      	cmp	r6, r4
 80001e2:	d109      	bne.n	80001f8 <__libc_init_array+0x24>
 80001e4:	4d0b      	ldr	r5, [pc, #44]	; (8000214 <__libc_init_array+0x40>)
 80001e6:	4c0c      	ldr	r4, [pc, #48]	; (8000218 <__libc_init_array+0x44>)
 80001e8:	f000 f818 	bl	800021c <_init>
 80001ec:	1b64      	subs	r4, r4, r5
 80001ee:	10a4      	asrs	r4, r4, #2
 80001f0:	2600      	movs	r6, #0
 80001f2:	42a6      	cmp	r6, r4
 80001f4:	d105      	bne.n	8000202 <__libc_init_array+0x2e>
 80001f6:	bd70      	pop	{r4, r5, r6, pc}
 80001f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80001fc:	4798      	blx	r3
 80001fe:	3601      	adds	r6, #1
 8000200:	e7ee      	b.n	80001e0 <__libc_init_array+0xc>
 8000202:	f855 3b04 	ldr.w	r3, [r5], #4
 8000206:	4798      	blx	r3
 8000208:	3601      	adds	r6, #1
 800020a:	e7f2      	b.n	80001f2 <__libc_init_array+0x1e>
 800020c:	08000234 	.word	0x08000234
 8000210:	08000234 	.word	0x08000234
 8000214:	08000234 	.word	0x08000234
 8000218:	08000238 	.word	0x08000238

0800021c <_init>:
 800021c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800021e:	bf00      	nop
 8000220:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000222:	bc08      	pop	{r3}
 8000224:	469e      	mov	lr, r3
 8000226:	4770      	bx	lr

08000228 <_fini>:
 8000228:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800022a:	bf00      	nop
 800022c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800022e:	bc08      	pop	{r3}
 8000230:	469e      	mov	lr, r3
 8000232:	4770      	bx	lr
