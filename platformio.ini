; #############################################################################
; ### PlatformIO Project Configuration File                                 ###
; #############################################################################

[platformio]
name = STM32WLE5x
description = Project for developing the MuMo firmware


; #############################################################################
; ### Options - to be reused on some environments                           ###
; #############################################################################

[options]
board = mumo_stm32wle5jc

local_build_flags =
	-Wno-unknown-pragmas

cloud_build_flags = 
	-Wno-unknown-pragmas

testing_build_flags = 
	-D unitTesting

test_coverage_build_flags = 
	-lgcov
    --coverage
    -fprofile-abs-path
	-O0



aes_hardware_software = 
	-D HARDWARE_AES
;	-D SOFTWARE_AES

; choose either UART1 / COM14 (ST-Link as test port) or UART2 / COM26 (USB as test port
host_test_port = COM14
target_test_port = -D TARGET_TEST_PORT_UART1

; #############################################################################
; ### Settings Common to all environments                                   ###
; #############################################################################

[env]
lib_ldf_mode = deep

; #############################################################################
; ### Dummy - to trigger PIO to install ststm32                             ###
; #############################################################################

[env:dummy]
platform = ststm32
board = ${options.board}


; #############################################################################
; ### Local desktop and Cloud Unittesting : ALL generic unittests           ###
; #############################################################################

[env:all_generic_unittests]
platform = native
build_flags = 
	${options.testing_build_flags}
	${options.test_coverage_build_flags}
	${options.cloud_build_flags}
	-D generic
	-D SOFTWARE_AES

test_framework = unity
test_filter = 
	test_generic*
	test_both*
check_src_filters =  
    lib/*
    src/*
    test/*
check_flags =
	--suppress=unusedFunction

;extra_scripts = post:.github/workflows/buildcoveragereport.py


; #############################################################################
; ### Local desktop and Cloud Unittesting : SELECTED generic unittests      ###
; #############################################################################

[env:some_generic_unittests]
platform = native
build_flags = 
	${options.testing_build_flags}
	${options.test_coverage_build_flags}
	${options.cloud_build_flags}
	-D generic
	-D SOFTWARE_AES

test_framework = unity
test_filter = 
	;test_generic_general
	;test_generic_sensordevicecollection
	;test_generic_font
	;test_both_logging
	;test_both_power
	;test_generic_display
	;test_generic_sensor_tsl2591
	;test_generic_sensor_battery
	;test_generic_screen
	;test_generic_maincontroller
	;test_generic_applicationevent
	;test_generic_graphics
	;test_generic_lorawan_deviceaddress
	;test_generic_lorawan_framecount
	;test_generic_lorawan_framecontrol
	;test_generic_lorawan_0_general
	test_generic_lorawan_1_rawmessage
	;test_generic_lorawan_2_crypto
	;test_generic_lorawan_3_txrxcycle
	;test_generic_lorawan_4_mac

	;test_generic_aeskey
	;test_generic_aesblock
	;test_generic_hexascii
	;test_generic_lora_channelcollection
	;test_generic_settingscollection

debug_test = test_generic_lorawan_2_crypto


; #############################################################################
; ### Local Application build                                               ###
; #############################################################################

[env:target_mumo_v2x]
platform = ststm32
board = ${options.board}
framework = stm32cube
upload_protocol = stlink
monitor_speed = 115200
debug_tool = stlink
extra_scripts = pre:.github/workflows/buildinfo.py
build_flags = 
	${options.local_build_flags}
	${options.aes_hardware_software}

; #############################################################################
; ### Target Unit Tests                                                     ###
; #############################################################################

[env:target_mumo_v2x_unittests]
platform = ststm32
board = ${options.board}
framework = stm32cube
upload_protocol = stlink
build_flags = 
	${options.local_build_flags}
	${options.testing_build_flags}
	-Wno-unused-function
	${options.aes_hardware_software}
	${options.target_test_port}

debug_tool = stlink
test_framework = unity
test_port = ${options.host_test_port}


test_filter = 
	;test_target_rng
	;test_target_aes
	;test_target_lowpower
	;test_target_interrupts
	;test_target_lptim1
	;test_target_spi
	;test_target_i2c
	;test_target_uart1
	;test_target_uart2
	;test_target_display
	;test_target_eeprom
	test_target_lorawan_crypto
	;test_benchmark_aes

debug_test = test_target_lorawan_crypto


; #############################################################################
; ### Cloud Application build                                               ###
; #############################################################################

[env:production]
platform = ststm32
board = ${options.board}
framework = stm32cube
build_flags = 
	${options.cloud_build_flags}
	${options.aes_hardware_software}



; #############################################################################
; ### Debug with SemiHosting                                                ###
; #############################################################################

[env:semi]
platform = ststm32
board = ${options.board}
framework = stm32cube
upload_protocol = stlink
build_flags = 
	${options.local_build_flags}
	-D unitTesting
	-lgcov
    ;--coverage
    -ftest-coverage
	-fprofile-arcs
	-fprofile-info-section
	-Wno-unused-function
	${options.aes_hardware_software}
	${options.target_test_port}
debug_tool = stlink
test_framework = unity
test_port = ${options.host_test_port}
test_filter = test_semihosting
debug_test = test_semihosting

extra_scripts = pre:.github/workflows/enable_semihosting.py

debug_extra_cmds =
    monitor arm semihosting enable
    monitor arm semihosting_fileio enable
